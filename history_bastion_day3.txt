    1  exit
    2  ansible-playbook -i /root/rh_adv_deploy_lab/ocp_inventory -f 20 /usr/share/ansible/openshift-ansible/playbooks/deploy_cluster.yml
    3  exit
    4  ansible all -m shell -a 'export GUID=`hostname | cut -d"." -f2`; echo "export GUID=$GUID" >> $HOME/.bashrc'
    5  ansible all -m shell -a 'echo GUID=$GUID'
    6  hostname | cut -d"." -f2
    7  ansible all -m shell -a 'hostname | cut -d"." -f2'
    8  ansible all -m shell -a 'echo GUID=$GUID'
    9  ansible all -m shell -a 'echo $GUID'
   10  ansible all -m shell -a 'export GUID=`hostname | cut -d"." -f2`; echo "export GUID=$GUID" >> $HOME/.bashrc'
   11  ansible all -m shell -a 'echo $GUID'
   12  ansible all -m shell -a 'echo GUID=$GUID'
   13  ssh master1.99e4.internal
   14  ansible all -m shell -a 'sudo -i;echo GUID=$GUID'
   15  ansible all -m shell -a 'echo GUID=$GUID' --become_user=root
   16  ansible --help
   17  ansible all -m shell -a 'echo GUID=$GUID' --become-user=root
   18  ssh master1.99e4.internal
   19  ansible --list-hosts
   20  ansible all --list-hosts
   21  cat /etc/ansible/hosts 
   22  ansible all -m ping
   23  ansible all -m shell -a 'docker -version'
   24  ansible all -m shell -a 'docker --version'
   25  ansible all -m shell -a 'yum repolist'
   26  ansible nfs -m shell -a"exportfs"
   27  yum install atomic-openshift-utils atomic-openshift-clients
   28  mkdir rh_adv_deploy_lab
   29  cd rh_adv_deploy_lab/
   30  git init
   31  cp /etc/ansible/hosts ocp_inventory
   32  vi ocp_inventory 
   33  wget http://ipa.shared.example.opentlc.com/ipa/config/ca.crt -O /root/ipa-ca.crt
   34  cp /root/ipa-ca.crt .
   35  ansible nfs -m shell -a"ls /root"
   36  ansible masters -m shell -a"ls /root"
   37  ansible masters -m shell -a"ls /etc/origin/master"
   38  ansible-playbook -i /root/rh_adv_deploy_lab/ocp_inventory -f 20 /usr/share/ansible/openshift-ansible/playbooks/prerequisites.yml
   39  ansible-playbook -i /root/rh_adv_deploy_lab/ocp_inventory -f 20 /usr/share/ansible/openshift-ansible/playbooks/byo/config.yml
   40  ansible-playbook -i /root/rh_adv_deploy_lab/ocp_inventory -f 20 /usr/share/ansible/openshift-ansible/playbooks/deploy_cluster.yml 
   41  ansible masters[0] -b -m fetch -a "src=/root/.kube/config dest=/root/.kube/config flat=yes"
   42  oc whoami
   43  oc get nodes --show-labels
   44  oc get pod --all-namespaces -o wide
   45  ansible masters -m shell -a 'ls /etc/origin'
   46  ansible masters -m shell -a 'ls /etc/origin/master'
   47  ansible masters -m shell -a 'cat /etc/origin/master/htpasswd'
   48  ansible masters -m shell -a 'ls /root'
   49  git status
   50  git add .
   51  git commit -m "initial inventory file"
   52  vi ocp_inventory 
   53  yum install screen
   54  screen
   55  tmux
   56  git status
   57  git add ocp_inventory
   58  git commit -m "update to include ldap"
   59  git remote add origin https://github.com/bentaljaard/rh_adv_deploy_lab.git
   60  git push -u origin master
   61  tmux --list
   62  tmux lsit
   63  tmux list
   64  tmux list-sessions
   65  tmux attach 0
   66  tmux attach -t 0
   67  git pull
   68  ls
   69  oc get users
   70  ansible -m copy
   71  ansible -m copy --help
   72  ansible masters -m copy -a 'src=/root/rh_adv_deploy_lab/groupsync.yaml dest=/etc/origin/master/groupsync.yaml'
   73  ansible masters -m copy -a 'src=/root/rh_adv_deploy_lab/whitelist.yaml dest=/etc/origin/master/whitelist.yaml'
   74  ansible master1 -m shell -a 'oc get users'
   75  ansible master -m shell -a 'oc get users'
   76  ansible master1 -m shell -a 'oc get users'
   77  ansible master1.$GUID.internal -m shell -a 'oc get users'
   78  ansible nodes
   79  ansible hosts
   80  ansible masters
   81  ansible masters --list-hosts
   82  ansible master1.99e4.internal -m shell -a 'oc get users'
   83  ansible master1.99e4.internal -m shell -a 'oc adm groups sync --sync-config=/etc/origin/master/groupsync.yaml --whitelist=/etc/origin/master/whitelist.yaml'
   84  ansible master1.99e4.internal -m shell -a 'oc adm groups sync --sync-config=/etc/origin/master/groupsync.yaml --whitelist=/etc/origin/master/whitelist.yaml --confirm'
   85  ansible master1.99e4.internal -m shell -a 'oc get groups'
   86  ansible nfs --list-hosts
   87  ansible nfs -m shell -a 'echo $GUID'
   88  vi create_nfs_dirs.sh
   89  chmod +x create_nfs_dirs.sh 
   90  ansible nfs -m copy -a 'src=/root/rh_adv_deploy_lab/create_nfs_dirs.sh dest=/tmp/create_nfs_dirs.sh'
   91  ansible nfs -m shell -a '/tmp/create_nfs_dirs.sh'
   92  ansible nfs -m shell -a 'chmod +x /tmp/create_nfs_dirs.sh'
   93  ansible nfs -m shell -a '/tmp/create_nfs_dirs.sh'
   94  vi create_nfs_dirs.sh 
   95  ansible nfs -m copy -a 'src=/root/rh_adv_deploy_lab/create_nfs_dirs.sh dest=/tmp/create_nfs_dirs.sh'
   96  ansible nfs -m shell -a 'chmod +x /tmp/create_nfs_dirs.sh'
   97  ansible nfs -m shell -a '/tmp/create_nfs_dirs.sh'
   98  vi create_5g_pvs.sh
   99  chmod +x create_5g_pvs.sh 
  100  ./create_5g_pvs.sh 
  101  vi create_10g_pvs.sh
  102  chmod +x create_10g_pvs.sh 
  103  ./create_10g_pvs.sh 
  104  cat /root/pvs/* | oc create -f -
  105  oc get pv
  106  ansible nodes -m shell -a "docker pull registry.access.redhat.com/openshift3/ose-recycler:latest"
  107  ansible nodes -m shell -a "docker tag registry.access.redhat.com/openshift3/ose-recycler:latest registry.access.redhat.com/openshift3/ose-recycler:v3.10.14"
  108  oc whoami
  109  oc new-project smoke-test
  110  oc new-app nodejs-mongo-persistent
  111  watch oc get pod
  112  oc get route
  113  oc delete project smoke-test
  114  git status
  115  git add .
  116  git commit -m "add create scritps for nfs volumes"
  117  git push -u origin master
  118  exit
  119  history
  120  cd rh_adv_deploy_lab/
  121  history > history_bastion_day1.txt
  122  git add .
  123  git commit -m "add bash history from day 1"
  124  git push -u origin master
  125  ansible all -m ping
  126  oc get users
  127  oc login 
  128  ansible master1.99e4.internal -m shell -a 'ls /etc/origin/master'
  129  ansible master1.99e4.internal -m shell -a 'cat /etc/origin/master/master-config.yaml'
  130  ls
  131  vi ocp_inventory 
  132  history|grep deploy
  133  ansible-playbook -i /root/rh_adv_deploy_lab/ocp_inventory -f 20 /usr/share/ansible/openshift-ansible/playbooks/deploy_cluster.yml
  134  ansible-playbook -i /root/rh_adv_deploy_lab/ocp_inventory -f 20 --limit @/usr/share/ansible/openshift-ansible/playbooks/deploy_cluster.retry
  135  ansible-playbook -i /root/rh_adv_deploy_lab/ocp_inventory -f 20 /usr/share/ansible/openshift-ansible/playbooks/deploy_cluster.yml --limit @/usr/share/ansible/openshift-ansible/playbooks/deploy_cluster.retry
  136  ansible master1.${GUID}.internal -m shell -a 'cat /etc/origin/master/htpasswd'
  137  echo $GUID
  138  hostname
  139  export GUID=99e4
  140  ansible master1.${GUID}.internal -m shell -a 'cat /etc/origin/master/htpasswd'
  141  ansible master1.${GUID}.internal -m shell -a 'ls /etc/origin/master'
  142  ansible master1.${GUID}.internal -m shell -a 'cat /etc/origin/master/htpasswd'
  143  ansible master1.${GUID}.internal -m shell -a 'cat /etc/origin/master/htpasswd.*'
  144  ansible masters -m shell -a 'mv /etc/origin/master/htpasswd.* /etc/origin/master/htpasswd'
  145  ansible master1.${GUID}.internal -m shell -a 'cat /etc/origin/master/htpasswd'
  146  ls
  147  ls ..
  148  cp ../htpasswd.openshift .
  149  vi ocp_inventory 
  150  git status
  151  git add .
  152  git commmit -m "add config for htpasswd"
  153  git commit -m "add config for htpasswd"
  154  git push -u origin master
  155  git pull
  156  git push -u origin master
  157  oc get pods
  158  oc login -u system:admin
  159  oc get pods
  160  oc get pods --wide
  161  oc get pods -o wide
  162  oc get pod --all-namespaces -o wide
  163  oc new-project smoke-test
  164  oc new-app nodejs-mongo-persistent
  165  watch oc get pod
  166  oc get route
  167  oc delete project smoke-test
  168  oc adm
  169  ssh master1.$GUID.internal
  170  cat /var/preserve/hosts 
  171  cp /var/preserve/hosts ./preserve_hosts_file
  172  ssh master1.$GUID.internal
  173  vi ocp_inventory 
  174  echo ############################################################################################################
  175  ansible masters -m shell -a "sed -i -e 's/openshift-ovs-subnet/openshift-ovs-multitenant/g' /etc/origin/master/master-config.yaml"
  176  cat preserve_hosts_file 
  177  ansible masters -m shell -a "/usr/local/bin/master-restart api"
  178  ansible masters -m shell -a "ls /usr/local/bin"
  179  ansible masters -m shell -a "ls /usr/local"
  180  ansible masters -m shell -a "locate master-restart"
  181  ansible masters -m shell -a "systemctl"
  182  ansible masters -m shell -a "systemctl|grep atomic"
  183  ansible masters -m shell -a "systemctl restart atomic-openshift-master-api.service"
  184  ansible ma -m shell -a "systemctl restart atomic-openshift-master-controllers.service"
  185  oc get cm -n openshift-node -o yaml | sed -e 's/ovs-.*/ovs-multitenant/' | oc apply -f -
  186  ls /var/preserve/
  187  git status
  188  oc login -u system:admin
  189  oc get cm -n openshift-node -o yaml | sed -e 's/ovs-.*/ovs-multitenant/' | oc apply -f -
  190  oc get cm -n openshift-node -o yaml 
  191  oc get cm
  192  oc get cm -n openshift-node
  193  ansible nodes -m shell -a "sed -i -e 's/ovs-.*/ovs-multitenant/g' /etc/origin/node/node-config.yaml"
  194  ansible nodes -m shell -a "systemctl restart atomic-openshift-node"
  195  ansible nodes -m shell -a "systemctl restart vswitch"
  196  ansible nodes -m shell -a "systemctl restart VSwitch"
  197  ansible nodes -m shell -a "systemctl restart Vswitch"
  198  echo fuck
  199  ansible nodes -m shell -a "systemctl restart openvswitch"
  200  oc get netnamespaces
  201  oc new-project pizzaparty-dev
  202  oc new-project fancypants-dev
  203  oc new-app openshift/hello-openshift:v1.1.1.1 -n pizzaparty-dev
  204  oc new-app openshift/hello-openshift:v1.1.1.1 -n fancypants-dev
  205  oc get pod --all-namespaces | grep hello-openshift
  206  oc get pod --all-namespaces
  207  oc get pod --all-namespaces | grep hello-openshift
  208  oc run shelly -n pizzaparty-dev --image=openshift3/ose-deployer --command=true -- bash -c 'while true; do sleep 1; done'
  209  oc run shelly -n fancypants-dev --image=openshift3/ose-deployer --command=true -- bash -c 'while true; do sleep 1; done'
  210  git status
  211  git add .
  212  git commit -m "add multitenancy network config and preserve hosts file"
  213  git push -u origin master
  214  oc get pod --all-namespaces | grep shelly
  215  oc get netnamespaces
  216  oc get pod -n pizzaparty-dev $(oc get pod -n pizzaparty-dev | awk '/hello-openshift/ {print $1}') -o template --template '{{.status.podIP}}{{"\n"}}'
  217  oc get pod -n fancypants-dev $(oc get pod -n fancypants-dev | awk '/hello-openshift/ {print $1}') -o template --template '{{.status.podIP}}{{"\n"}}'
  218  oc rsh -n fancypants-dev $(oc get pod -n fancypants-dev | awk '/shelly/ {print $1}')
  219  oc rsh -n pizzaparty-dev $(oc get pod -n pizzaparty-dev | awk '/shelly/ {print $1}') "/bin/bash"
  220  oc adm pod-network join-projects --to=fancypants-dev pizzaparty-dev
  221  oc get netnamespaces | grep dev
  222  oc rsh -n fancypants-dev $(oc get pod -n fancypants-dev | awk '/shelly/ {print $1}')
  223  oc new-project servicelayer
  224  oc new-app openshift/hello-openshift
  225  oc status
  226  oc get pods
  227  oc scale dc/hello-openshift --replicas=4
  228  oc get pods
  229  watch oc get pods
  230  oc describe service hello-openshift
  231  ssh master1.$GUID.internal
  232  oc delete project fancypants-dev
  233  oc delete project pizzaparty-dev
  234  oc delete project servicelayer
  235  oc get netnamespaces
  236  curl -o ./migrate-network-policy.sh https://raw.githubusercontent.com/openshift/origin/master/contrib/migration/migrate-network-policy.sh
  237  ls migrate-network-policy.sh 
  238  cat migrate-network-policy.sh 
  239  ls
  240  git status
  241  git add migrate-network-policy.sh
  242  git commit -m "add network migrate script"
  243  git push -u origin master
  244  chmod a+x migrate-network-policy.sh
  245  oc whoami
  246  ./migrate-network-policy.sh
  247  oc get netnamespaces
  248  curl -o ./unmigrate-network-policy.sh https://raw.githubusercontent.com/openshift/origin/master/contrib/migration/unmigrate-network-policy.sh
  249  git add .
  250  git commit -m "add un-migrate script"
  251  git push -u origin master
  252  ansible masters -m shell -a "sed -i -e 's/openshift-ovs-multitenant/openshift-ovs-networkpolicy/g' /etc/origin/master/master-config.yaml"
  253  ansible nodes -m shell -a "sed -i -e 's/ovs-multitenant/ovs-networkpolicy/' /etc/origin/node/node-config.yaml"
  254  ansible masters -m shell -a "systemctl restart atomic-openshift-master-api atomic-openshift-master-controller atomic-openshift-node openvswitch"
  255  ansible masters -m shell -a "systemctl restart atomic-openshift-master-api atomic-openshift-master-controller"
  256  ansible masters -m shell -a "systemctl |grep atomic"
  257  ansible masters -m shell -a "systemctl restart atomic-openshift-master-api atomic-openshift-master-controllers"
  258  ansible nodes -m shell -a "systemctl restart atomic-openshift-node openvswitch"
  259  cd ..
  260  git clone https://github.com/newgoliath/microservices-on-openshift
  261  cd microservices-on-openshift/
  262  ls
  263  cd installscripts/
  264  oc new-project msclient
  265  oc new-project msservices
  266  oc new-project msinfra
  267  vi 1.setVariable.sh 
  268  echo $GUID
  269  vi 1.setVariable.sh 
  270  source 1.setVariable.sh 
  271  source 2.deployEmailSvc-PythonMySQL.sh
  272  source 3.deployTwitter-Tomcat.sh
  273  source 4.deployUserRegBackend-NodejsMongo.sh 
  274  source 5.deployFrontend-PHP.sh 
  275  oc get pods -n msclient
  276  oc get pods -n msclient -n msservice
  277  oc get pods -n msclient -n msservices
  278  watch oc get pods -n msclient -n msservices -n msinfra
  279  oc get pods -n msclient -n msservices -n msinfra
  280  oc get pods -n msclient,msservices,msinfra
  281  oc get pods -n msclient -n msservices -n msinfra
  282  oc get pods -n msclient -n msservices
  283  oc get pods -n msclient
  284  oc get pods
  285  oc get pods --help
  286  oc optiopns
  287  oc options
  288  oc get pods -n msclient
  289  oc get pods -n msservices
  290  oc get pods -n msinfra
  291  oc get route -n msclient
  292  oc get svc -n msinfra --show-labels
  293  oc get pods -n msinfra --show-labels | grep Running
  294  cd ..
  295  cd rh_adv_deploy_lab/
  296  ls
  297  echo 'kind: NetworkPolicy
  298  apiVersion: networking.k8s.io/v1
  299  metadata:
  300    name: allow-3306
  301  spec:
  302   podSelector:
  303     matchLabels:
  304       app: mysql
  305   ingress:
  306   - from:
  307     - podSelector:
  308         matchLabels:
  309           app: emailsvc
  310     ports:
  311     - protocol: TCP
  312       port: 3306' >allow-3306.yaml
  313  echo allow-3306.yaml 
  314  cat allow-3306.yaml 
  315  vi ocp_inventory 
  316  oc create -f allow-3306.yaml -n msinfra
  317  curl http://userreg-msclient.apps.$GUID.example.opentlc.com/hack.php
  318  echo 'kind: NetworkPolicy
  319  apiVersion: networking.k8s.io/v1
  320  metadata:
  321    name: default-deny
  322  spec:
  323    podSelector:' >default-deny.yaml
  324  oc create -f default-deny.yaml -n msclient
  325  oc get route -n msclient --show-labels
  326  echo 'kind: NetworkPolicy
  327  apiVersion: networking.k8s.io/v1
  328  metadata:
  329    name: allow-8080-frontend
  330  spec:
  331    podSelector:
  332      matchLabels:
  333        app: userreg
  334    ingress:
  335    - ports:
  336      - protocol: TCP
  337        port: 8080' >allow-8080-frontend.yaml
  338  oc create -f allow-8080-frontend.yaml -n msclient
  339  oc create -f default-deny.yaml -n msservices
  340  echo 'kind: NetworkPolicy
  341  apiVersion: networking.k8s.io/v1
  342  metadata:
  343    name: allow-8080-userregsvc
  344  spec:
  345    podSelector:
  346      matchLabels:
  347        app: userregsvc
  348    ingress:
  349    - ports:
  350      - protocol: TCP
  351        port: 8080' >allow-8080-userregsvc.yaml
  352  echo 'kind: NetworkPolicy
  353  apiVersion: networking.k8s.io/v1
  354  metadata:
  355    name: allow-8080-twitter
  356  spec:
  357    podSelector:
  358      matchLabels:
  359        app: twitter-api
  360    ingress:
  361    - ports:
  362      - protocol: TCP
  363        port: 8080' >allow-8080-twitter.yaml
  364  oc create -f allow-8080-userregsvc.yaml -n msservices
  365  oc create -f allow-8080-twitter.yaml -n msservices
  366  echo 'kind: NetworkPolicy
  367  apiVersion: networking.k8s.io/v1
  368  metadata:
  369    name: allow-27017
  370  spec:
  371   podSelector:
  372     matchLabels:
  373       app: mongodb
  374   ingress:
  375   - from:
  376     - podSelector:
  377         matchLabels:
  378           app: userregsvc
  379     ports:
  380     - protocol: TCP
  381       port: 27017' >allow-27017.yaml
  382  oc create -f allow-27017.yaml -n msservices
  383  oc create -f default-deny.yaml -n msinfra
  384  oc get pods -n msinfra
  385  oc label namespace msservices project=userregservices
  386  echo 'kind: NetworkPolicy
  387  apiVersion: networking.k8s.io/v1
  388  metadata:
  389    name: allow-8080-emailsvc
  390  spec:
  391    podSelector:
  392      matchLabels:
  393        app: emailsvc
  394    ingress:
  395    - from:
  396      - namespaceSelector:
  397          matchLabels:
  398            project: userregservices
  399      ports:
  400      - protocol: TCP
  401        port: 8080' >allow-8080-emailsvc.yaml
  402  oc create -f allow-8080-emailsvc.yaml -n msinfra
  403  oc get netnamespaces
  404  git status
  405  git add .
  406  git commit -m "add network policies"
  407  git push -u origin master
  408  ssh master1.$GUID.internal
  409  ansible all -m ping
  410  echo $GUID
  411  hostname
  412  ssh master1.99e4.internal
  413  ls
  414  cd rh_adv_deploy_lab/
  415  ls
  416  cp ../prometheus_alerts_rules.yml .
  417  history > history_bastion_day2.txt
  418  history
  419  git status
  420  git add .
  421  git commit -m "add history"
  422  oc get users
  423  oc whoami
  424  export APPNAME=portalapp
  425  export APPTEXT="Portal App"
  426  oc new-project ${APPNAME}-dev --display-name="${APPTEXT} Development"
  427  oc new-project ${APPNAME}-test --display-name="${APPTEXT} Testing"
  428  oc new-project ${APPNAME}-prod --display-name="${APPTEXT} Production"
  429  export APPNAME=paymentapp
  430  export APPTEXT="Payment App"
  431  oc new-project ${APPNAME}-dev --display-name="${APPTEXT} Development"
  432  oc new-project ${APPNAME}-test --display-name="${APPTEXT} Testing"
  433  oc new-project ${APPNAME}-prod --display-name="${APPTEXT} Production"
  434  oc adm policy add-role-to-group admin portalapp -n portalapp-dev
  435  oc adm policy add-role-to-group admin portalapp -n portalapp-test
  436  oc adm policy add-role-to-group admin paymentapp -n paymentapp-dev
  437  oc adm policy add-role-to-group admin paymentapp -n paymentapp-test
  438  oc describe rolebinding.rbac -n paymentapp-dev
  439  oc adm policy add-role-to-group admin ocp-production -n portalapp-prod
  440  oc adm policy add-role-to-group admin ocp-production -n paymentapp-prod
  441  oc adm policy add-cluster-role-to-group cluster-admin ocp-platform
  442  oc adm policy add-role-to-group system:image-puller system:serviceaccounts:paymentapp-prod -n paymentapp-dev
  443  oc adm policy add-role-to-group system:image-puller system:serviceaccounts:paymentapp-test -n paymentapp-dev
  444  oc adm policy add-role-to-group registry-viewer ocp-production -n paymentapp-dev
  445  oc adm policy add-role-to-group registry-viewer ocp-production -n paymentapp-test
  446  oc login -u marina --password 'r3dh4t1!'
  447  oc project paymentapp-dev
  448  oc get users
  449  oc new-app ruby~https://github.com/openshift/sinatra-example --name=sinatra -n paymentapp-dev
  450  oc logs -f build/sinatra-1 -n paymentapp-dev
  451  oc login -u system:Admin
  452  oc login -u system:admin
  453  oc get users
  454  cat ocp_inventory 
  455  oc login -u marina --password 'r3dh4t1!'
  456  oc describe imagestream sinatra -n paymentapp-dev
  457  oc tag sinatra:latest sinatra:test
  458  oc project paymentapp-test
  459  oc new-app paymentapp-dev/sinatra:test -n paymentapp-test
  460  watch oc get pods
  461  oc tag sinatra:test sinatra:prod -n paymentapp-dev
  462  oc login -u david -p 'r3dh4t1!'
  463  oc project paymentapp-prod
  464  oc project
  465  oc projects
  466  oc login -u marina -p 'r3dh4t1!'
  467  oc get groups
  468  oc login -u system:admin
  469  oc get groups
  470  oc login -u david -p 'r3dh4t1!'
  471  oc project paymentapp-prod
  472  oc new-app paymentapp-dev/sinatra:prod -n paymentapp-prod
  473  sleep 10
  474  oc get pod
  475  oc login -u system:admin
  476  oc adm policy add-scc-to-group anyuid system:serviceaccounts:paymentapp-prod
  477  oc login -u prod1 -p 'r3dh4t1!'
  478  oc project paymentapp-prod
  479  oc new-app --strategy=docker https://github.com/thoraxe/centos-root-docker-example
  480  oc logs -f build/centos-root-docker-example-1 -n paymentapp-prod
  481  oc get pod
  482  oc rsh centos-root-docker-example-1-8wm8r
  483  vi ocp_inventory 
  484  ansible masters -m lineinfile: "path=/etc/origin/master/master-config.yaml regexp='projectRequestMessage' line='  projectRequestMessage: \'Please create project using the portal http://portal.$GUID.internal/provision or contact Karla at karla@example.com\''"
  485  hostname
  486  ansible masters -m lineinfile: "path=/etc/origin/master/master-config.yaml regexp='projectRequestMessage' line='  projectRequestMessage: \'Please create project using the portal http://portal.99e4.internal/provision or contact Karla at karla@example.com\''"
  487  ansible master1 -m shell -a "cat /etc/origin/master/master-config.yaml"
  488  ansible master1.99e4.internal -m shell -a "cat /etc/origin/master/master-config.yaml"
  489  ansible masters -m lineinfile: "path=/etc/origin/master/master-config.yaml regexp='projectRequestMessage' line='  projectRequestMessage: \'Please create project using the portal http://portal.99e4.internal/provision or contact Karla at karla@example.com\''"
  490  ansible masters -m lineinfile -a "path=/etc/origin/master/master-config.yaml regexp='projectRequestMessage' line='  projectRequestMessage: \'Please create project using the portal http://portal.99e4.internal/provision or contact Karla at karla@example.com\''"
  491  ansible masters -m shell -a "systemctl"
  492  ansible masters -m shell -a "systemctl|grep atomic"
  493  ansible masters -m shell -a "systemctl restart atomic-openshift-master-api.service"
  494  oc login -u system:admin
  495  oc project default
  496  oc adm policy remove-cluster-role-from-group self-provisioner system:authenticated
  497  oc adm policy remove-cluster-role-from-group self-provisioner system:authenticated:oauth
  498  oc describe clusterrolebinding.rbac -n default
  499  oc describe clusterrolebinding.rbac -n default self-provisioner
  500  oc login -u payment1 -p r3dh4t1!
  501  oc new-project thiswillnotwork
  502  oc login -u system:admin
  503  oc project default
  504  oc adm policy add-cluster-role-to-group self-provisioner ocp-production
  505  oc get groups
  506  oc login -u prod1 -p r3dh4t1!
  507  oc new-project thiswillwork
  508  oc login -u system:admin
  509  oc delete project thiswillwork
  510  oc delete project paymentapp-dev
  511  oc delete project paymentapp-test
  512  oc delete project paymentapp-prod
  513  oc delete project portalapp-dev
  514  oc delete project portalapp-test
  515  oc delete project portalapp-prod
  516  cd rh_adv_deploy_lab/
  517  ls
  518  echo ##########################################################################################################
  519  history > history_bastion_day3.txt
